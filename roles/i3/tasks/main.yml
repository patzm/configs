---
# Installation
- name: install i3 window manager
  become: yes
  package: name={{ item }} state=latest
  with_items:
    - i3
    - i3lock
    - i3status
    - python3-pip

- name: install py3status "clock" module depenencies
  become: yes
  pip:
    name: "{{ item }}"
    executable: pip
  with_items:
    - pytz
    - tzlocal

- name: check if py3status is already installed
  command: which py3status
  ignore_errors: yes
  register: py3status_bin

- name: install py3status from source
  include_tasks: build-py3status.yml
  when: py3status_bin.rc != 0

- name: install the j4 desktop launcher
  when: ansible_distribution_version is version_compare('16.04','>=')
  become: yes
  package:
    name: j4-dmenu-desktop
    state: latest

- name: build the j4 desktop launcher from source
  when: ansible_distribution_version is version_compare('14.10','<=')
  # TODO: maybe make this call conditional if j4 dmenu is already installed
  include_tasks: build-j4-dmenu-desktop.yml

# set up configuration
- name: checking if ~/.i3 is a symlink
  stat:
    path: "{{ i3_dir }}"
  register: i3_dir_links

- name: remove existing i3 directory
  when: i3_dir_links.stat.islnk is defined and i3_dir_links.stat.islnk
  file:
    path: "{{ i3_dir }}"
    state: absent

- name: create the i3 directory
  file:
    path: "{{ i3_dir }}"
    state: directory
    owner: "{{ ansible_env.USER }}"
    group: "{{ user_group }}"
    mode: 0700

- name: copy all config files
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ i3_dir }}/{{ item }}"
    owner: "{{ ansible_env.USER }}"
    group: "{{ user_group }}"
    mode: 0755
    force: yes
  with_items:
    - autostart.sh
    - config
    - i3status.conf
    - screenshot.sh
    - wallpaper.png

- name: determine i3exit file name
  set_fact:
    i3_14_10_or_less: yes
  when: ansible_distribution_version is version_compare('14.10', '<=')

- name: link the correct i3exit script
  copy:
    src: "{{ role_path }}/files/i3exit/{{ 'Ubuntu-14-' if i3_14_10_or_less else 'Ubuntu-15+'}}.sh"
    dest: "{{ i3_dir }}/i3exit"
    owner: "{{ ansible_env.USER }}"
    group: "{{ user_group }}"
    mode: 0755
    force: yes

