#!/usr/bin/env bash

# Source: ddnomad - https://unix.stackexchange.com/a/346800/247336
# alternative: gnome-screenshot

function help_and_exit () {
    cat <<-EOF
    Usage: screenshot [-h | -p <screenshot_dir> -r|-s]

    Take screenshot of a whole screen or a specified region,
    save it to a specified folder and copy it to clipboard. 

       -h   - print help and exit
       -p   - path to the directory in which the screenshots should be stored
       -r   - take a screenshot of a screen region
       -s   - take a screenshot of the whole screen
EOF
    exit $1
}

function screenshot_region () {
    import ${1}
}

function screenshot_screen () {
    import -window root ${1}
}

function validate_input_folder () {
    if [ ! -d "$1" ]; then
        echo "Invalid input folder $1"
        help_and_exit 1
    fi
}

image_file_basename=$(date '+%Y-%m-%d_%H-%M-%S')
let i=1

while getopts "p:sr" option; do
    case "${option}" in
        h) help_and_exit 0;;
        p)
            validate_input_folder ${OPTARG}
            image_file="${OPTARG}/${image_file_basename}.png"
            while [ -e "$image_file" ]; do
                image_file="${OPTARG}/${image_file_basename}_${i}.png"
                let i++
            done
            ;;
        s) mode="screen";;
        r) mode="region";;
        \*) help_and_exit 1;;
        \?) help_and_exit 1;;
    esac
done

if [ -z $mode ]; then
    help_and_exit 1
fi

case "${mode}" in
    screen) screenshot_screen $image_file;;
    region) screenshot_region $image_file;;
esac

xclip -selection clipboard -target image/png -i < "${image_file}"

